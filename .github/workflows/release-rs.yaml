---
name: Release

on:
  push:
    branches:
      - 'main'

defaults:
  run:
    shell: bash

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - uses: Swatinem/rust-cache@v1
        with:
          key: release-rs-01
          working-directory: ./release-rs

      - id: release-rs
        working-directory: release-rs
        env:
          RUST_LOG: debug
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # release operator
          cargo run

      - uses: Swatinem/rust-cache@v1
        if: ${{ steps.release-rs.outputs.release-detected == 'true' }}
        with:
          key: app-01

      - if: ${{ steps.release-rs.outputs.release-detected == 'true' }}
        run: |
          # tag name output
          echo "${{ steps.release-rs.outputs.tag-name }}"

      - if: ${{ steps.release-rs.outputs.release-detected == 'true' }}
        run: |
          # build of release binary
          cargo build --release

      - if: ${{ steps.release-rs.outputs.release-detected == 'true' }}
        id: data
        run: |
          # setting outputs for release updater step
          echo "::set-output name=run_id::${GITHUB_RUN_ID}"
          echo "::set-output name=server_url::${GITHUB_SERVER_URL}"
          echo "::set-output name=repository::${GITHUB_REPOSITORY}"

      - if: ${{ steps.release-rs.outputs.release-detected == 'true' }}
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{ steps.release-rs.outputs.tag-name }}
          name: ${{ steps.release-rs.outputs.tag-name }}
          append_body: true
          body: |
            ---
            <!-- UPDATES_START -->
            #### Process Updates
            * Processed by GitHub Actions run [`#${{ steps.data.outputs.run_id }}`](${{ format('{0}/{1}/actions/runs/{2}', steps.data.outputs.server_url, steps.data.outputs.repository, steps.data.outputs.run_id) }})
            <!-- UPDATES_END -->

      # next steps could involve:
      # - upload of compiled binaries and checksums to the github release
      # - publishing to crates.io
